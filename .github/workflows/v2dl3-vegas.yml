name: v2dl3-vegas-CI

# Controls when the workflow will run
on:
  # push:
  #   branches: [ "main" ]
  # Triggers the workflow on push or pull request events but only for the "main" branch
  pull_request :
    branches: [ "main" ]
    paths:
      - 'utils/**vegas**'
      - 'pyV2DL3/**vegas**'
      - '.github/**vegas**'
      # Every python file in the 'pyV2DL3' directory (does not include subdirectories)
      - 'pyV2DL3/*.py'
      # pip install file. The conda one is neither used in testing nor necessary for the user.
      - 'setup.py'


jobs:
  v2dl3-vegas:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    env:
      DOCKER_IMAGE: veritasacc/vegas:v2dl3-CI
      # New 'test' outputs
      NEW_DIR: ./new-fits
      # 'Control' outputs from main branch
      CONTROL_DIR: ./control-fits

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      #- name: flake8

      # Runs a single command using the runners shell
      - name: Pull docker image
        run: |
          docker login --username=$DOCKER_USERNAME --password=$DOCKER_PASSWORD
          docker pull $DOCKER_IMAGE

      - name: Install new branch and generate .fits outputs
        run: |
          docker run -p 80:80 -v $GITHUB_WORKSPACE:/V2DL3 $DOCKER_IMAGE /bin/bash -c \
          "cd V2DL3 && bash utils/vegas_docker_test_runs.sh OUTDIR=$NEW_DIR"

      - name: Install main branch and generate control outputs
        if: success() || failure()
        run: |
          docker run -p 80:80 -v $GITHUB_WORKSPACE:/V2DL3 $DOCKER_IMAGE /bin/bash -c \
          "cd V2DL3 && git checkout -t origin/main && pip install . && bash utils/vegas_docker_test_runs.sh OUTDIR=$CONTROL_DIR"

      - name: Install fitsdiff
        run: |
          sudo apt-get install -qq astropy-utils

      - name: Compare fits outputs
        run: |
          sudo chown -R 777 $NEW_DIR
          sudo chown -R 777 $CONTROL_DIR
          bash utils/compare_fits_dirs.sh $NEW_DIR $CONTROL_DIR
